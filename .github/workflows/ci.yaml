name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  JAVA_VERSION: 21
  NODE_VERSION: 22
  GO_VERSION: 1.24
  RUST_VERSION: 1.83.0

jobs:
  style_check:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{env.JAVA_VERSION}}
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: style_check_maven
      - name: Check Format
        run: ./mvnw editorconfig:check

  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{env.JAVA_VERSION}}
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: build_maven
      - name: Build
        run: ./mvnw install -e --ntp -B
      - name: Javadoc
        run: ./mvnw -P release javadoc:javadoc --ntp -B
      - name: Upload generated sources
        uses: actions/upload-artifact@v4
        with:
          name: generated-sources
          path: |
            ./it/java8/target/generated-sources
            ./it/java17/target/generated-sources
          if-no-files-found: error
          retention-days: 3
      - name: Upload jars
        uses: actions/upload-artifact@v4
        with:
          name: jars
          path: ~/.m2/repository/online/sharedtype
          if-no-files-found: error
          retention-days: 3
      - name: Remove jars from cache
        run: rm -rf ~/.m2/repository/online/sharedtype

  jdk_compatibility_test:
    needs: [build_and_test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 8, 11, 17]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - uses: actions/download-artifact@v4
        with:
          name: jars
          path: ~/.m2/repository/online/sharedtype
#      - name: Display downloaded artifact
#        run: ls -lhR ~/.m2/repository/online/sharedtype
      - uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: build_maven
      - name: Test
        run: ./mvnw verify -pl it/java8 -e --ntp -B

  client_test:
    needs: [build_and_test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VERSION}}
      - uses: actions/download-artifact@v4
        with:
          name: generated-sources
          path: ./it/
#      - name: Display downloaded artifact
#        run: ls -lhR ./it/
      - name: Test Typescript
        working-directory: client-test/typescript
        run: |
          npm i
          npm run test

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{env.RUST_VERSION}}
      - name: Test Rust
        working-directory: client-test/rust
        run: cargo test

      - uses: actions/setup-go@v5
        with:
          cache-dependency-path: client-test/go/go.sum
          go-version-file: client-test/go/go.mod
      - name: Test Golang
        working-directory: client-test/go
        run: go get && go test ./...

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{env.JAVA_VERSION}}
      - uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: build_maven
      - uses: actions/download-artifact@v4
        with:
          name: jars
          path: ~/.m2/repository/online/sharedtype
      - name: E2E Test
        run: ./mvnw verify -Pe2e -e --ntp -B

#  clean-artifact:
#    needs: [ jdk_compatibility_test, client_test ]
#    runs-on: ubuntu-latest
#    if: always()
#    steps:
#      - uses: geekyeggo/delete-artifact@v5
#        with:
#          name: dist
